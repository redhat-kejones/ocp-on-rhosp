# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         localhost:514 local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    option                  tcplog
    option                  dontlognull
#    option http-server-close
#    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          300s
    timeout server          300s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 20000

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /

frontend  atomic-openshift
    bind *:80
    bind *:443 
    mode tcp

    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }

    acl host_api req_ssl_sni -i openshift.orocktech.com
    acl secure dst_port 443

    use_backend atomic-openshift-api if host_api secure
    use_backend atomic-openshift-https if secure !host_api
    use_backend atomic-openshift-http if !secure !host_api
    default_backend atomic-openshift-api


backend atomic-openshift-api
    balance roundrobin
  # maximum SSL session ID length is 32 bytes.
  stick-table type binary len 32 size 30k expire 30m
  acl clienthello req_ssl_hello_type 1
  acl serverhello rep_ssl_hello_type 2
  # use tcp content accepts to detects ssl client and server hello.
  tcp-request inspect-delay 5s
  tcp-request content accept if clienthello
  # no timeout on response inspect delay by default.
  tcp-response content accept if serverhello
  stick on payload_lv(43,1) if clienthello
  # Learn on response if server hello.
  stick store-response payload_lv(43,1) if serverhello
  option ssl-hello-chk

    server      master0 10.11.212.17:443 check
    server      master1 10.11.212.28:443 check 
    server      master2 10.11.212.15:443 check

backend atomic-openshift-http 
    balance roundrobin
    server	infra0	10.11.212.18:80 check
    server	infra1	10.11.212.10:80 check
    server	infra2	10.11.212.42:80 check

backend atomic-openshift-https
    balance roundrobin
    server	infra0	10.11.212.18:443 check
    server	infra1	10.11.212.10:443 check
    server	infra2	10.11.212.42:443 check


